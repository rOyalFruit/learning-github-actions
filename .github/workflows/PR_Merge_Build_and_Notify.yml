name: PR Merge Build and Notify

on:
  push:
    branches:
      - main

jobs:
  # Push 이벤트 정보를 추출하는 job
  check-push:
    runs-on: ubuntu-latest
    outputs:
      commit_message: ${{ steps.get_commit_info.outputs.commit_message }}
      commit_author: ${{ steps.get_commit_info.outputs.commit_author }}
      branch: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get commit info
        id: get_commit_info
        run: |
          echo "commit_message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
          echo "commit_author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT

      - name: Check push event
        run: echo "Push to main branch detected, proceeding with build and analysis"

  # CodeQL 분석 job - 빌드 과정을 직접 포함
  codeql-analysis:
    needs: check-push
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    outputs:
      codeql_status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
          queries: security-and-quality

      # CodeQL이 빌드 과정을 추적할 수 있도록 여기서 직접 빌드 수행
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle for CodeQL Analysis
        run: ./gradlew build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        id: codeql

      # 빌드 결과물을 다른 job에서 사용할 수 있도록 업로드
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/
            !build/tmp/**

  # 보안 취약점 확인 job
  security-check:
    needs: codeql-analysis
    runs-on: ubuntu-latest
    outputs:
      alert_count: ${{ steps.check_security_issues.outputs.alert_count }}
      has_vulnerabilities: ${{ steps.check_security_issues.outputs.has_vulnerabilities }}
    steps:
      - name: Check for CodeQL Security Issues
        id: check_security_issues
        run: |
          # GitHub API를 사용하여 코드 스캐닝 알림 확인
          ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts?state=open")
          
          # 열린 알림 수 계산
          ALERT_COUNT=$(echo $ALERTS | jq length)
          
          echo "Security alert count: $ALERT_COUNT"
          echo "alert_count=$ALERT_COUNT" >> $GITHUB_OUTPUT
          
          if [ "$ALERT_COUNT" -gt 0 ]; then
            echo "Security vulnerabilities found!"
            echo "has_vulnerabilities=true" >> $GITHUB_OUTPUT
          else
            echo "has_vulnerabilities=false" >> $GITHUB_OUTPUT
          fi

  # CodeQL 분석 실패 시 Slack 알림 job
  notify-codeql-failure:
    needs: [ check-push, codeql-analysis ]
    if: needs.codeql-analysis.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack on CodeQL Failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#ff9900", 
                  "title": "${{ github.repository }}", 
                  "title_link": "https://github.com/${{github.repository}}", 
                  "text": "Push 후 CodeQL 분석 실패 :warning:",
                  "fields": [
                    {
                      "title": "Branch",
                      "value": "${{ needs.check-push.outputs.branch }}",
                      "short": true
                    },
                    {
                      "title": "Commit Message",
                      "value": "${{ needs.check-push.outputs.commit_message }}",
                      "short": true
                    },
                    {
                      "title": "Author",
                      "value": "${{ needs.check-push.outputs.commit_author }}",
                      "short": true
                    },
                    {
                      "title": "Workflow",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run>",
                      "short": false
                    }
                  ]      
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  # 보안 취약점 발견 시 Slack 알림 job
  notify-security-vulnerabilities:
    needs: [ check-push, security-check ]
    if: needs.security-check.outputs.has_vulnerabilities == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack on Security Vulnerabilities
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#ff9900", 
                  "title": "${{ github.repository }}", 
                  "title_link": "https://github.com/${{github.repository}}", 
                  "text": "Push 후 CodeQL 분석에서 보안 취약점 발견 :warning:",
                  "fields": [
                    {
                      "title": "Branch",
                      "value": "${{ needs.check-push.outputs.branch }}",
                      "short": true
                    },
                    {
                      "title": "Commit Message",
                      "value": "${{ needs.check-push.outputs.commit_message }}",
                      "short": true
                    },
                    {
                      "title": "Author",
                      "value": "${{ needs.check-push.outputs.commit_author }}",
                      "short": true
                    },
                    {
                      "title": "취약점 수",
                      "value": "${{ needs.security-check.outputs.alert_count }}개",
                      "short": true
                    },
                    {
                      "title": "보안 취약점 확인",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/security/code-scanning|Security Dashboard에서 확인>",
                      "short": false
                    },
                    {
                      "title": "Workflow",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run>",
                      "short": false
                    }
                  ]      
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK